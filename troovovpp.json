{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Troovo.VPP.API"
  },
  "host": "vpp-api.troovo.build",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/1.0/BasicRequest": {
      "get": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_Get_ByUser",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicRequest_Ex"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_UpdateAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "basicRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicRequest"
            }
          }
        }
      },
      "post": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_AddAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "basicRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicRequest"
            }
          }
        }
      }
    },
    "/api/1.0/BasicRequest/Paged": {
      "get": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_Get_ByUser",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicRequest_Paged"
            }
          }
        }
      }
    },
    "/api/1.0/BasicRequest/{basicRequestId}": {
      "delete": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_Delete",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "basicRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/1.0/BasicRequest/{basicRequestId}/{isBasicRequest}": {
      "get": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_Get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "basicRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isBasicRequest",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicRequest"
            }
          }
        }
      }
    },
    "/api/1.0/BasicRequest/Fields": {
      "get": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_GetFields",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agencyClientPolicyId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicRequestField"
              }
            }
          }
        }
      }
    },
    "/api/1.0/BasicRequest/DefaultFieldValues": {
      "get": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_GetDefaultFieldValues",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicRequestDefaultFieldValue"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_UpdateDefaultFieldValue",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "defFieldVal",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasicRequestDefaultFieldValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicRequestDefaultFieldValue"
            }
          }
        }
      },
      "post": {
        "tags": [
          "BasicRequest"
        ],
        "operationId": "BasicRequest_AddDefaultFieldValue",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "defFieldVal",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasicRequestDefaultFieldValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicRequestDefaultFieldValue"
            }
          }
        }
      }
    },
    "/api/1.0/CardRequest": {
      "put": {
        "tags": [
          "CardRequest"
        ],
        "operationId": "CardRequest_UpdateAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cardRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardRequest"
            }
          }
        }
      }
    },
    "/api/1.0/ManualCard/Policy": {
      "get": {
        "tags": [
          "ManualCard"
        ],
        "operationId": "ManualCard_Get_ByUser",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManualCardPolicy"
              }
            }
          }
        }
      }
    },
    "/api/1.0/ManualCard": {
      "post": {
        "tags": [
          "ManualCard"
        ],
        "operationId": "ManualCard_AddAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "basicRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManualCardRequest"
            }
          }
        }
      }
    },
    "/api/1.0/ManualCard/{basicRequestId}": {
      "get": {
        "tags": [
          "ManualCard"
        ],
        "operationId": "ManualCard_GetCardDetails",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "basicRequestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManualCardRequest"
            }
          }
        }
      }
    },
    "/api/1.0/Policy": {
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_Get_ByUser",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Policy"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_Add",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        }
      }
    },
    "/api/1.0/Policy/{policyId}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_GetAsync",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_DeleteAsync",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_Enable",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/1.0/PolicySourceType": {
      "get": {
        "tags": [
          "PolicySourceType"
        ],
        "operationId": "PolicySourceType_List",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicySourceType"
              }
            }
          }
        }
      }
    },
    "/api/1.0/PostNotifyPolicy": {
      "get": {
        "tags": [
          "PostNotifyPolicy"
        ],
        "operationId": "PostNotifyPolicy_Get_ByUser",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PostNotifyPolicy"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PostNotifyPolicy"
        ],
        "operationId": "PostNotifyPolicy_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policyUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostNotifyPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostNotifyPolicy"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PostNotifyPolicy"
        ],
        "operationId": "PostNotifyPolicy_Add",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "newPolicy",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostNotifyPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostNotifyPolicy"
            }
          }
        }
      }
    },
    "/api/1.0/PostNotifyPolicy/{policyId}": {
      "delete": {
        "tags": [
          "PostNotifyPolicy"
        ],
        "operationId": "PostNotifyPolicy_Delete",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PostNotifyPolicy"
        ],
        "operationId": "PostNotifyPolicy_Restore",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/1.0/PostNotifyPolicy/{postNotifyPolicyId}": {
      "get": {
        "tags": [
          "PostNotifyPolicy"
        ],
        "operationId": "PostNotifyPolicy_Get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "postNotifyPolicyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostNotifyPolicy"
            }
          }
        }
      }
    },
    "/api/1.0/SecureMessage/{transactionId}/{reservationCode}/{checkInDate}": {
      "get": {
        "tags": [
          "SecureMessage"
        ],
        "operationId": "SecureMessage_Get",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reservationCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkInDate",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecureMessage"
              }
            }
          }
        }
      }
    },
    "/api/1.0/VendorConfig/Api": {
      "get": {
        "tags": [
          "VendorApiCredential"
        ],
        "operationId": "VendorApiCredential_GetApiCredentialList",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorApiCredentialList"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorApiCredential"
        ],
        "operationId": "VendorApiCredential_UpdateApiCredential",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "credential",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorApiCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "VendorApiCredential"
        ],
        "operationId": "VendorApiCredential_CreateApiCredential",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "credential",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorApiCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/1.0/VendorConfig/Api/Troovo": {
      "get": {
        "tags": [
          "VendorApiCredential"
        ],
        "operationId": "VendorApiCredential_GetTroovoApiCredentialList",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorApiCredentialList"
              }
            }
          }
        }
      }
    },
    "/api/1.0/VendorConfig/Api/{apiCredentialId}": {
      "get": {
        "tags": [
          "VendorApiCredential"
        ],
        "operationId": "VendorApiCredential_GetApiCredential",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiCredentialId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorApiCredential"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorApiCredential"
        ],
        "operationId": "VendorApiCredential_DeleteApiCredential",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiCredentialId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VendorApiCredential"
        ],
        "operationId": "VendorApiCredential_RestoreApiCredential",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiCredentialId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/1.0/VendorConfig/Client": {
      "get": {
        "tags": [
          "VendorClientConfiguration"
        ],
        "operationId": "VendorClientConfiguration_GetClientConfigurationList",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorClientConfigurationList"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorClientConfiguration"
        ],
        "operationId": "VendorClientConfiguration_UpdateClientConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configuration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorClientConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "VendorClientConfiguration"
        ],
        "operationId": "VendorClientConfiguration_CreateClientConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configuration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorClientConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/1.0/VendorConfig/Client/{configurationId}": {
      "get": {
        "tags": [
          "VendorClientConfiguration"
        ],
        "operationId": "VendorClientConfiguration_GetClientConfiguration",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorClientConfigurationList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorClientConfiguration"
        ],
        "operationId": "VendorClientConfiguration_DeleteClientConfiguration",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VendorClientConfiguration"
        ],
        "operationId": "VendorClientConfiguration_RestoreClientConfiguration",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/1.0/Card": {
      "put": {
        "tags": [
          "VirtualCard"
        ],
        "operationId": "VirtualCard_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SavedCard"
            }
          }
        }
      },
      "post": {
        "tags": [
          "VirtualCard"
        ],
        "operationId": "VirtualCard_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SavedCard"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualCard"
        ],
        "operationId": "VirtualCard_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/1.0/Card/Billing/Definitions": {
      "put": {
        "tags": [
          "VirtualCard"
        ],
        "operationId": "VirtualCard_SaveDBIFields",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BasicRequest_Ex": {
      "type": "object",
      "properties": {
        "AgencyCode": {
          "type": "string"
        },
        "AgencyName": {
          "type": "string"
        },
        "ClientCode": {
          "type": "string"
        },
        "ClientName": {
          "type": "string"
        },
        "CardRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "BasicRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "AgencyClientPolicyId": {
          "format": "int32",
          "type": "integer"
        },
        "AgencyId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "ValidFrom": {
          "format": "date-time",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "type": "string"
        },
        "MaximumSpend": {
          "format": "double",
          "type": "number"
        },
        "MaximumAuthorisations": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyId": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "PAN": {
          "type": "string"
        },
        "CVV": {
          "type": "string"
        },
        "Expiry": {
          "format": "date-time",
          "type": "string"
        },
        "CardService": {
          "type": "string"
        },
        "CardProvider": {
          "type": "string"
        },
        "CardReady": {
          "type": "boolean"
        },
        "IsSuccess": {
          "type": "object"
        },
        "CreationMethod": {
          "type": "string"
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicRequestFieldDetail"
          }
        },
        "RecordLocator": {
          "type": "string"
        },
        "PNRId": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "Supplier": {
          "type": "string"
        },
        "LastModifiedUser": {
          "type": "string"
        },
        "CreatedByUserId": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUserId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BasicRequestFieldDetail": {
      "type": "object",
      "properties": {
        "BasicRequestDetailId": {
          "format": "int32",
          "type": "integer"
        },
        "BasicRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "BasicRequestFieldId": {
          "format": "int32",
          "type": "integer"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "BasicRequest": {
      "type": "object",
      "properties": {
        "CardRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "BasicRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "AgencyClientPolicyId": {
          "format": "int32",
          "type": "integer"
        },
        "AgencyId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "ValidFrom": {
          "format": "date-time",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "type": "string"
        },
        "MaximumSpend": {
          "format": "double",
          "type": "number"
        },
        "MaximumAuthorisations": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyId": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "PAN": {
          "type": "string"
        },
        "CVV": {
          "type": "string"
        },
        "Expiry": {
          "format": "date-time",
          "type": "string"
        },
        "CardService": {
          "type": "string"
        },
        "CardProvider": {
          "type": "string"
        },
        "CardReady": {
          "type": "boolean"
        },
        "IsSuccess": {
          "type": "object"
        },
        "CreationMethod": {
          "type": "string"
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicRequestFieldDetail"
          }
        },
        "RecordLocator": {
          "type": "string"
        },
        "PNRId": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "Supplier": {
          "type": "string"
        },
        "LastModifiedUser": {
          "type": "string"
        },
        "CreatedByUserId": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUserId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BasicRequest_Paged": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "basicReuqests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicRequest"
          }
        }
      }
    },
    "BasicRequestField": {
      "type": "object",
      "properties": {
        "AgencyClientPolicyId": {
          "format": "int32",
          "type": "integer"
        },
        "BasicRequestFieldId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Label": {
          "type": "string"
        },
        "ParamTypeName": {
          "type": "string"
        },
        "DefaultValue": {
          "type": "string"
        },
        "IsMandatory": {
          "type": "boolean"
        }
      }
    },
    "BasicRequestDefaultFieldValue": {
      "type": "object",
      "properties": {
        "BasicRequestDefaultFieldValueId": {
          "format": "int32",
          "type": "integer"
        },
        "FieldName": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "PolicyId": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultValue": {
          "type": "string"
        },
        "Offset": {
          "format": "int32",
          "type": "integer"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "CardRequest": {
      "type": "object",
      "properties": {
        "CardRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "IsCardRequestModifyId": {
          "type": "boolean"
        },
        "AgencyId": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumSpend": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ManualCardPolicy": {
      "type": "object",
      "properties": {
        "PolicyId": {
          "format": "int32",
          "type": "integer"
        },
        "PolicyName": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "ManualCardRequest": {
      "type": "object",
      "properties": {
        "BasicRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "ValidFrom": {
          "format": "date-time",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "PAN": {
          "type": "string"
        },
        "CVV": {
          "type": "string"
        },
        "Expiry": {
          "format": "date-time",
          "type": "string"
        },
        "CardService": {
          "type": "string"
        },
        "CardProvider": {
          "type": "string"
        },
        "IsSuccess": {
          "type": "object"
        }
      }
    },
    "Policy": {
      "type": "object",
      "properties": {
        "PolicyId": {
          "format": "int32",
          "type": "integer"
        },
        "AgencyId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "SourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "IFVCCXml": {
          "type": "string"
        },
        "WHATVCCXml": {
          "type": "string"
        },
        "PolicyName": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "PolicySourceType": {
      "type": "object",
      "properties": {
        "PolicySourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "PolicySourceTypeName": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "PostNotifyPolicy": {
      "type": "object",
      "properties": {
        "PostNotifyPolicyId": {
          "format": "int32",
          "type": "integer"
        },
        "AgencyId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "SavedRulesId": {
          "format": "int32",
          "type": "integer"
        },
        "SavedRulesXml": {
          "type": "string"
        },
        "PolicyName": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "SecureMessage": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "Styles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VendorApiCredentialList": {
      "type": "object",
      "properties": {
        "VendorApiCredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "Type": {
          "type": "string"
        },
        "Endpoint": {
          "type": "string"
        },
        "Environment": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "VendorApiCredential": {
      "type": "object",
      "properties": {
        "VendorApiCredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "Company": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Endpoint": {
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "enum": [
            1,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "IntegratorKey": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Environment": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "IsTroovoCredentials": {
          "type": "boolean"
        }
      }
    },
    "VendorClientConfiguration": {
      "type": "object",
      "properties": {
        "VendorClientConfigurationId": {
          "format": "int32",
          "type": "integer"
        },
        "VendorApiCredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "AgencyId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "AccountNumber": {
          "type": "string"
        },
        "AccountExpiry": {
          "type": "string"
        },
        "RequesterECN": {
          "type": "string"
        },
        "IssuedToECN": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "BuyerId": {
          "type": "string"
        },
        "BillingAccountId": {
          "type": "string"
        },
        "GroupLoginId": {
          "type": "string"
        },
        "BankNumber": {
          "type": "string"
        },
        "CompanyNumber": {
          "type": "string"
        },
        "BackupCardNumber": {
          "type": "string"
        },
        "PoolName": {
          "type": "string"
        },
        "RealTokenId": {
          "type": "string"
        },
        "CurrencyId": {
          "format": "int32",
          "type": "integer"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Type": {
          "format": "int32",
          "enum": [
            1,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "AccountClientId": {
          "type": "string"
        }
      }
    },
    "VendorClientConfigurationList": {
      "type": "object",
      "properties": {
        "AgencyName": {
          "type": "string"
        },
        "ClientName": {
          "type": "string"
        },
        "VendorClientConfigurationId": {
          "format": "int32",
          "type": "integer"
        },
        "Type": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "CreateCardRequest": {
      "type": "object",
      "properties": {
        "ReferenceId": {
          "type": "string"
        },
        "AirPlus_BillingInformation": {
          "$ref": "#/definitions/Billing"
        },
        "eNett_AccountId": {
          "format": "int32",
          "type": "integer"
        },
        "eNett_LocalCurrency": {
          "type": "string"
        },
        "BookingId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "CardType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "MaximumSpendLimit": {
          "format": "double",
          "type": "number"
        },
        "MinimumSpendLimit": {
          "format": "double",
          "type": "number"
        },
        "AllowedCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ValidFrom": {
          "format": "date-time",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "type": "string"
        },
        "MaximumAuthorizationsAllowed": {
          "format": "int32",
          "type": "integer"
        },
        "HotelTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hotel"
          }
        },
        "FlightTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flight"
          }
        },
        "CarTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Car"
          }
        },
        "EventTransaction": {
          "$ref": "#/definitions/EventTransaction"
        },
        "RailTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rail"
          }
        },
        "OtherTransaction": {
          "$ref": "#/definitions/OtherTransaction"
        },
        "Tickets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ticket"
          }
        },
        "AirPlus_BookedForUserId": {
          "type": "string"
        },
        "AirPlus_BookedForUserName": {
          "type": "string"
        },
        "Mastercard_CompanyName": {
          "type": "string"
        },
        "Mastercard_TemplateName": {
          "type": "string"
        },
        "Mastercard_RCNAlias": {
          "type": "string"
        },
        "Mastercard_DataSourceName": {
          "type": "string"
        },
        "Mastercard_CompanyId": {
          "type": "string"
        },
        "Mastercard_TemplateId": {
          "type": "string"
        },
        "Mastercard_RCNId": {
          "type": "string"
        },
        "Mastercard_DataSourceId": {
          "type": "string"
        },
        "Mastercard_VelocityControls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VelocityControl"
          }
        },
        "Mastercard_AgingVelocityControl": {
          "$ref": "#/definitions/AgingVelocityControl"
        },
        "Mastercard_AmountRangeControl": {
          "$ref": "#/definitions/AmountRangeControl"
        },
        "Mastercard_CurfewControl": {
          "$ref": "#/definitions/CurfewControl"
        },
        "Mastercard_GeographyControl": {
          "$ref": "#/definitions/GeographyControl"
        },
        "Mastercard_MerchantIdControl": {
          "$ref": "#/definitions/MerchantIdControl"
        },
        "Mastercard_MerchantNameControl": {
          "$ref": "#/definitions/MerchantNameControl"
        },
        "Mastercard_MerchantAmountControl": {
          "type": "boolean"
        },
        "Mastercard_TimeOfDayControl": {
          "$ref": "#/definitions/TimeOfDayControl"
        },
        "Mastercard_TransactionLimitControl": {
          "$ref": "#/definitions/TransactionLimitControl"
        },
        "Mastercard_TravelControl": {
          "$ref": "#/definitions/TravelControl"
        },
        "Mastercard_ValidityPeriodControl": {
          "$ref": "#/definitions/ValidityPeriodControl"
        },
        "Mastercard_SupplierName": {
          "type": "string"
        },
        "Mastercard_SupplierEmail": {
          "type": "string"
        },
        "eNett_IsMultiUse": {
          "type": "boolean"
        },
        "eNett_MultiUseClosePercentage": {
          "format": "int32",
          "type": "integer"
        },
        "eNett_Allow3DS": {
          "type": "boolean"
        },
        "eNett_AcquirerId": {
          "type": "string"
        },
        "eNett_MerchantNumber": {
          "type": "string"
        },
        "eNett_MerchantCategoryCode": {
          "type": "string"
        },
        "eNett_MerchantCategoryName": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "type": "integer"
        },
        "eNett_Notes": {
          "type": "string"
        },
        "UserReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionalField"
          }
        },
        "Visa_UtcOffset": {
          "type": "string"
        },
        "Visa_Rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        },
        "OptionalFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionalField"
          }
        },
        "Amex_MaintainedBy": {
          "type": "string"
        },
        "Amex_SupplierToken": {
          "type": "boolean"
        },
        "Amex_MccTemplateId": {
          "type": "string"
        },
        "Amex_TokenTemplateId": {
          "type": "string"
        },
        "Amex_DomainControls": {
          "$ref": "#/definitions/DomainControls"
        },
        "Amex_RecurringData": {
          "$ref": "#/definitions/RecurringData"
        },
        "Amex_Reconciliation": {
          "$ref": "#/definitions/Reconciliation"
        },
        "Wex_Vendor": {
          "$ref": "#/definitions/Vendor"
        },
        "Wex_AuthHoldDays": {
          "format": "int32",
          "type": "integer"
        },
        "Wex_Country": {
          "type": "string"
        },
        "Wex_PaymentSchedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentSchedule"
          }
        },
        "Wex_MccGroupProfileName": {
          "type": "string"
        },
        "Dataflexnet_CurrencyType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "Dataflexnet_Reference": {
          "type": "string"
        },
        "Dataflexnet_VelocityLimit": {
          "format": "double",
          "type": "number"
        },
        "Dataflexnet_MaximumTransactions": {
          "format": "int32",
          "type": "integer"
        },
        "Dataflexnet_VelocityPeriodType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "Dataflexnet_VelocityPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "Dataflexnet_VirtualCardScheme": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        }
      }
    },
    "Billing": {
      "type": "object",
      "properties": {
        "Fees": {
          "type": "string"
        },
        "AccountingUnit": {
          "type": "string"
        },
        "AccountingCode": {
          "type": "string"
        },
        "OrderNumber": {
          "type": "string"
        },
        "Departure": {
          "format": "date-time",
          "type": "string"
        },
        "DepartmentCode": {
          "type": "string"
        },
        "InternalAccount": {
          "type": "string"
        },
        "CostCentre": {
          "type": "string"
        },
        "EmployeeNumber": {
          "type": "string"
        },
        "ProjectNumber": {
          "type": "string"
        },
        "Destination": {
          "type": "string"
        }
      }
    },
    "Hotel": {
      "type": "object",
      "properties": {
        "GuestName": {
          "type": "string"
        },
        "HotelName": {
          "type": "string"
        },
        "CheckInDate": {
          "format": "date-time",
          "type": "string"
        },
        "CheckOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "FaxNumber": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "RoomRate": {
          "format": "double",
          "type": "number"
        },
        "RoomTax": {
          "format": "double",
          "type": "number"
        },
        "TotalCharges": {
          "format": "double",
          "type": "number"
        },
        "TotalTaxes": {
          "format": "double",
          "type": "number"
        },
        "TotalNights": {
          "format": "int32",
          "type": "integer"
        },
        "GuestNumber": {
          "format": "int32",
          "type": "integer"
        },
        "CityCode": {
          "type": "string"
        },
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "ReservationNumber": {
          "type": "string"
        }
      }
    },
    "Flight": {
      "type": "object",
      "properties": {
        "TravellerName": {
          "type": "string"
        },
        "Departure": {
          "format": "date-time",
          "type": "string"
        },
        "DepartureLocation": {
          "type": "string"
        },
        "ArrivalLocation": {
          "type": "string"
        },
        "Carrier": {
          "type": "string"
        },
        "CabinClass": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "TripLegNumber": {
          "format": "int32",
          "type": "integer"
        },
        "StopOverType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "ExchangeTicketNumber": {
          "type": "string"
        },
        "CouponNumber": {
          "type": "string"
        },
        "FareBaseCode": {
          "type": "string"
        },
        "FlightNumber": {
          "type": "string"
        },
        "Arrival": {
          "format": "date-time",
          "type": "string"
        },
        "Fare": {
          "format": "double",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "type": "number"
        },
        "ServiceClass": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "TravelDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "DriverName": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "CompanyCode": {
          "type": "string"
        },
        "CarModel": {
          "type": "string"
        },
        "CarType": {
          "type": "string"
        },
        "PickUpDate": {
          "format": "date-time",
          "type": "string"
        },
        "DropOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "PickupLocation": {
          "type": "string"
        },
        "DropOffLocation": {
          "type": "string"
        },
        "DropoffCountry": {
          "type": "string"
        },
        "RateIndicator": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "type": "integer"
        },
        "Rate": {
          "format": "double",
          "type": "number"
        },
        "PickupCountry": {
          "type": "string"
        },
        "VehicleClass": {
          "type": "string"
        },
        "DaysRented": {
          "format": "int32",
          "type": "integer"
        },
        "ReservationNumber": {
          "type": "string"
        },
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        }
      }
    },
    "EventTransaction": {
      "type": "object",
      "properties": {
        "EventType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "Manager": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Start": {
          "format": "date-time",
          "type": "string"
        },
        "End": {
          "format": "date-time",
          "type": "string"
        },
        "Participants": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Rail": {
      "type": "object",
      "properties": {
        "PassengerName": {
          "type": "string"
        },
        "DepartureDate": {
          "format": "date-time",
          "type": "string"
        },
        "DepartureCity": {
          "type": "string"
        },
        "ArrivalCity": {
          "type": "string"
        },
        "ServiceClass": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        }
      }
    },
    "OtherTransaction": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Ticket": {
      "type": "object",
      "properties": {
        "PassengerName": {
          "type": "string"
        },
        "TicketNumber": {
          "type": "string"
        },
        "IssuingCarrier": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "type": "string"
        },
        "TotalFare": {
          "format": "double",
          "type": "number"
        },
        "TotalFees": {
          "format": "double",
          "type": "number"
        },
        "TotalTaxes": {
          "format": "double",
          "type": "number"
        },
        "RestrictedTicket": {
          "type": "boolean"
        },
        "ExchangeTicketAmount": {
          "format": "double",
          "type": "number"
        },
        "ExchangeFeeAmount": {
          "format": "double",
          "type": "number"
        },
        "ExchangeTicketNumber": {
          "type": "string"
        },
        "ReservationSystem": {
          "type": "string"
        },
        "NumberOfLegs": {
          "format": "int32",
          "type": "integer"
        },
        "IsDomestic": {
          "type": "boolean"
        },
        "RecordLocator": {
          "type": "string"
        },
        "FinalDestination": {
          "type": "string"
        },
        "TravelAgencyProductCode": {
          "type": "string"
        },
        "OriginalTicketNumber": {
          "type": "string"
        },
        "ExchangeTicketNumber2": {
          "type": "string"
        },
        "IsTMCMerchant": {
          "type": "boolean"
        },
        "TMCClientAccount": {
          "type": "string"
        },
        "IATAClientCode": {
          "type": "string"
        },
        "AgencyCode": {
          "type": "string"
        },
        "AgencyName": {
          "type": "string"
        }
      }
    },
    "VelocityControl": {
      "type": "object",
      "properties": {
        "MaximumTransactions": {
          "format": "int32",
          "type": "integer"
        },
        "Currency": {
          "type": "string"
        },
        "CurrencyType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "Period": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "CumulativeLimit": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AgingVelocityControl": {
      "type": "object",
      "properties": {
        "TimeZone": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            228,
            229,
            230,
            231,
            232,
            233,
            234,
            235,
            236,
            237,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            248,
            249,
            250,
            251,
            252,
            253,
            254,
            255,
            256,
            257,
            258,
            259,
            260,
            261,
            262,
            263,
            264,
            265,
            266,
            267,
            268,
            269,
            270,
            271,
            272,
            273,
            274,
            275,
            276,
            277,
            278,
            279,
            280,
            281,
            282,
            283,
            284,
            285,
            286,
            287,
            288,
            289,
            290,
            291,
            292,
            293,
            294,
            295,
            296,
            297,
            298,
            299,
            300,
            301,
            302,
            303,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            315,
            316,
            317,
            318,
            319,
            320,
            321,
            322,
            323,
            324,
            325,
            326,
            327,
            328,
            329,
            330,
            331,
            332,
            333,
            334,
            335,
            336,
            337,
            338,
            339,
            340,
            341,
            342,
            343,
            344,
            345,
            346,
            347,
            348,
            349,
            350,
            351,
            352,
            353,
            354,
            355,
            356,
            357,
            358,
            359,
            360,
            361,
            362,
            363,
            364,
            365,
            366,
            367,
            368,
            369,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            382,
            383,
            384,
            385,
            386,
            387,
            388,
            389,
            390,
            391,
            392,
            393,
            394,
            395,
            396,
            397,
            398,
            399,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            421,
            422,
            423,
            424,
            425,
            426,
            427,
            428,
            429,
            430,
            431,
            432,
            433,
            434,
            435,
            436,
            437,
            438,
            439,
            440,
            441,
            442,
            443,
            444,
            445,
            446,
            447,
            448,
            449,
            450,
            451,
            452,
            453,
            454,
            455,
            456,
            457,
            458,
            459,
            460,
            461,
            462,
            463,
            464,
            465,
            466,
            467,
            468,
            469,
            470,
            471,
            472,
            473,
            474,
            475,
            476,
            477,
            478,
            479,
            480,
            481,
            482,
            483,
            484,
            485,
            486,
            487,
            488,
            489,
            490,
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            499,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            545,
            546,
            547,
            548,
            549,
            550,
            551,
            552,
            553,
            554,
            555,
            556,
            557,
            558,
            559,
            560,
            561,
            562,
            563,
            564,
            565,
            566,
            567,
            568,
            569,
            570,
            571,
            572,
            573,
            574,
            575,
            576,
            577,
            578,
            579,
            580,
            581,
            582,
            583,
            584,
            585,
            586,
            587,
            588,
            589,
            590,
            591,
            592,
            593,
            594,
            595,
            596,
            597,
            598,
            599,
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610
          ],
          "type": "integer"
        },
        "AuthorizationHoldDays": {
          "format": "int32",
          "type": "integer"
        },
        "Currency": {
          "type": "string"
        },
        "CurrencyType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "Negate": {
          "type": "boolean"
        }
      }
    },
    "AmountRangeControl": {
      "type": "object",
      "properties": {
        "MinimumAmount": {
          "format": "double",
          "type": "number"
        },
        "MaximumAmount": {
          "format": "double",
          "type": "number"
        },
        "Currency": {
          "type": "string"
        },
        "CurrencyType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "Negate": {
          "type": "boolean"
        },
        "StrictPreAuthCheck": {
          "type": "boolean"
        }
      }
    },
    "CurfewControl": {
      "type": "object",
      "properties": {
        "TimeZone": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            228,
            229,
            230,
            231,
            232,
            233,
            234,
            235,
            236,
            237,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            248,
            249,
            250,
            251,
            252,
            253,
            254,
            255,
            256,
            257,
            258,
            259,
            260,
            261,
            262,
            263,
            264,
            265,
            266,
            267,
            268,
            269,
            270,
            271,
            272,
            273,
            274,
            275,
            276,
            277,
            278,
            279,
            280,
            281,
            282,
            283,
            284,
            285,
            286,
            287,
            288,
            289,
            290,
            291,
            292,
            293,
            294,
            295,
            296,
            297,
            298,
            299,
            300,
            301,
            302,
            303,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            315,
            316,
            317,
            318,
            319,
            320,
            321,
            322,
            323,
            324,
            325,
            326,
            327,
            328,
            329,
            330,
            331,
            332,
            333,
            334,
            335,
            336,
            337,
            338,
            339,
            340,
            341,
            342,
            343,
            344,
            345,
            346,
            347,
            348,
            349,
            350,
            351,
            352,
            353,
            354,
            355,
            356,
            357,
            358,
            359,
            360,
            361,
            362,
            363,
            364,
            365,
            366,
            367,
            368,
            369,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            382,
            383,
            384,
            385,
            386,
            387,
            388,
            389,
            390,
            391,
            392,
            393,
            394,
            395,
            396,
            397,
            398,
            399,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            421,
            422,
            423,
            424,
            425,
            426,
            427,
            428,
            429,
            430,
            431,
            432,
            433,
            434,
            435,
            436,
            437,
            438,
            439,
            440,
            441,
            442,
            443,
            444,
            445,
            446,
            447,
            448,
            449,
            450,
            451,
            452,
            453,
            454,
            455,
            456,
            457,
            458,
            459,
            460,
            461,
            462,
            463,
            464,
            465,
            466,
            467,
            468,
            469,
            470,
            471,
            472,
            473,
            474,
            475,
            476,
            477,
            478,
            479,
            480,
            481,
            482,
            483,
            484,
            485,
            486,
            487,
            488,
            489,
            490,
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            499,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            545,
            546,
            547,
            548,
            549,
            550,
            551,
            552,
            553,
            554,
            555,
            556,
            557,
            558,
            559,
            560,
            561,
            562,
            563,
            564,
            565,
            566,
            567,
            568,
            569,
            570,
            571,
            572,
            573,
            574,
            575,
            576,
            577,
            578,
            579,
            580,
            581,
            582,
            583,
            584,
            585,
            586,
            587,
            588,
            589,
            590,
            591,
            592,
            593,
            594,
            595,
            596,
            597,
            598,
            599,
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610
          ],
          "type": "integer"
        },
        "From": {
          "type": "string"
        },
        "To": {
          "type": "string"
        },
        "Negate": {
          "type": "boolean"
        },
        "Days": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer"
          }
        }
      }
    },
    "GeographyControl": {
      "type": "object",
      "properties": {
        "Negate": {
          "type": "boolean"
        },
        "Countries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MerchantIdControl": {
      "type": "object",
      "properties": {
        "Negate": {
          "type": "boolean"
        },
        "Merchants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Merchant"
          }
        }
      }
    },
    "MerchantNameControl": {
      "type": "object",
      "properties": {
        "Negate": {
          "type": "boolean"
        },
        "Names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TimeOfDayControl": {
      "type": "object",
      "properties": {
        "TimeZone": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            228,
            229,
            230,
            231,
            232,
            233,
            234,
            235,
            236,
            237,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            248,
            249,
            250,
            251,
            252,
            253,
            254,
            255,
            256,
            257,
            258,
            259,
            260,
            261,
            262,
            263,
            264,
            265,
            266,
            267,
            268,
            269,
            270,
            271,
            272,
            273,
            274,
            275,
            276,
            277,
            278,
            279,
            280,
            281,
            282,
            283,
            284,
            285,
            286,
            287,
            288,
            289,
            290,
            291,
            292,
            293,
            294,
            295,
            296,
            297,
            298,
            299,
            300,
            301,
            302,
            303,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            315,
            316,
            317,
            318,
            319,
            320,
            321,
            322,
            323,
            324,
            325,
            326,
            327,
            328,
            329,
            330,
            331,
            332,
            333,
            334,
            335,
            336,
            337,
            338,
            339,
            340,
            341,
            342,
            343,
            344,
            345,
            346,
            347,
            348,
            349,
            350,
            351,
            352,
            353,
            354,
            355,
            356,
            357,
            358,
            359,
            360,
            361,
            362,
            363,
            364,
            365,
            366,
            367,
            368,
            369,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            382,
            383,
            384,
            385,
            386,
            387,
            388,
            389,
            390,
            391,
            392,
            393,
            394,
            395,
            396,
            397,
            398,
            399,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            421,
            422,
            423,
            424,
            425,
            426,
            427,
            428,
            429,
            430,
            431,
            432,
            433,
            434,
            435,
            436,
            437,
            438,
            439,
            440,
            441,
            442,
            443,
            444,
            445,
            446,
            447,
            448,
            449,
            450,
            451,
            452,
            453,
            454,
            455,
            456,
            457,
            458,
            459,
            460,
            461,
            462,
            463,
            464,
            465,
            466,
            467,
            468,
            469,
            470,
            471,
            472,
            473,
            474,
            475,
            476,
            477,
            478,
            479,
            480,
            481,
            482,
            483,
            484,
            485,
            486,
            487,
            488,
            489,
            490,
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            499,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            545,
            546,
            547,
            548,
            549,
            550,
            551,
            552,
            553,
            554,
            555,
            556,
            557,
            558,
            559,
            560,
            561,
            562,
            563,
            564,
            565,
            566,
            567,
            568,
            569,
            570,
            571,
            572,
            573,
            574,
            575,
            576,
            577,
            578,
            579,
            580,
            581,
            582,
            583,
            584,
            585,
            586,
            587,
            588,
            589,
            590,
            591,
            592,
            593,
            594,
            595,
            596,
            597,
            598,
            599,
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610
          ],
          "type": "integer"
        },
        "Days": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeOfDay"
          }
        },
        "Negate": {
          "type": "boolean"
        }
      }
    },
    "TransactionLimitControl": {
      "type": "object",
      "properties": {
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Negate": {
          "type": "boolean"
        }
      }
    },
    "TravelControl": {
      "type": "object",
      "properties": {
        "Currency": {
          "type": "string"
        },
        "CurrencyType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "Negate": {
          "type": "boolean"
        }
      }
    },
    "ValidityPeriodControl": {
      "type": "object",
      "properties": {
        "TimeZone": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            228,
            229,
            230,
            231,
            232,
            233,
            234,
            235,
            236,
            237,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            248,
            249,
            250,
            251,
            252,
            253,
            254,
            255,
            256,
            257,
            258,
            259,
            260,
            261,
            262,
            263,
            264,
            265,
            266,
            267,
            268,
            269,
            270,
            271,
            272,
            273,
            274,
            275,
            276,
            277,
            278,
            279,
            280,
            281,
            282,
            283,
            284,
            285,
            286,
            287,
            288,
            289,
            290,
            291,
            292,
            293,
            294,
            295,
            296,
            297,
            298,
            299,
            300,
            301,
            302,
            303,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            315,
            316,
            317,
            318,
            319,
            320,
            321,
            322,
            323,
            324,
            325,
            326,
            327,
            328,
            329,
            330,
            331,
            332,
            333,
            334,
            335,
            336,
            337,
            338,
            339,
            340,
            341,
            342,
            343,
            344,
            345,
            346,
            347,
            348,
            349,
            350,
            351,
            352,
            353,
            354,
            355,
            356,
            357,
            358,
            359,
            360,
            361,
            362,
            363,
            364,
            365,
            366,
            367,
            368,
            369,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            382,
            383,
            384,
            385,
            386,
            387,
            388,
            389,
            390,
            391,
            392,
            393,
            394,
            395,
            396,
            397,
            398,
            399,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            421,
            422,
            423,
            424,
            425,
            426,
            427,
            428,
            429,
            430,
            431,
            432,
            433,
            434,
            435,
            436,
            437,
            438,
            439,
            440,
            441,
            442,
            443,
            444,
            445,
            446,
            447,
            448,
            449,
            450,
            451,
            452,
            453,
            454,
            455,
            456,
            457,
            458,
            459,
            460,
            461,
            462,
            463,
            464,
            465,
            466,
            467,
            468,
            469,
            470,
            471,
            472,
            473,
            474,
            475,
            476,
            477,
            478,
            479,
            480,
            481,
            482,
            483,
            484,
            485,
            486,
            487,
            488,
            489,
            490,
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            499,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            545,
            546,
            547,
            548,
            549,
            550,
            551,
            552,
            553,
            554,
            555,
            556,
            557,
            558,
            559,
            560,
            561,
            562,
            563,
            564,
            565,
            566,
            567,
            568,
            569,
            570,
            571,
            572,
            573,
            574,
            575,
            576,
            577,
            578,
            579,
            580,
            581,
            582,
            583,
            584,
            585,
            586,
            587,
            588,
            589,
            590,
            591,
            592,
            593,
            594,
            595,
            596,
            597,
            598,
            599,
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610
          ],
          "type": "integer"
        },
        "Negate": {
          "type": "boolean"
        },
        "StrictPreAuthCheck": {
          "type": "boolean"
        }
      }
    },
    "OptionalField": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "Rule": {
      "type": "object",
      "properties": {
        "RuleCode": {
          "type": "string"
        },
        "Overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleOverride"
          }
        }
      }
    },
    "DomainControls": {
      "type": "object",
      "properties": {
        "DomainControlType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "CoreVarianceType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "CoreVarianceValue": {
          "format": "double",
          "type": "number"
        },
        "LowVariance": {
          "format": "int32",
          "type": "integer"
        },
        "HighVariance": {
          "format": "int32",
          "type": "integer"
        },
        "ThreshholdLimit": {
          "format": "int32",
          "type": "integer"
        },
        "FullySettled": {
          "format": "double",
          "type": "number"
        },
        "PartialAuthorisationPercent": {
          "format": "double",
          "type": "number"
        },
        "PartialAuthorisationAmount": {
          "format": "double",
          "type": "number"
        },
        "PartialAuthorisationDays": {
          "format": "int32",
          "type": "integer"
        },
        "TimeZone": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "MerchantCategoryCodes": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        },
        "ServiceEstabishmentNumbers": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        },
        "CommodityType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "CalculateRefresh": {
          "format": "int32",
          "type": "integer"
        },
        "ContinualVarianceType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "ContinualVarianceValue": {
          "format": "double",
          "type": "number"
        },
        "CheckOut": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "RecurringData": {
      "type": "object",
      "properties": {
        "Frequency": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "RollOver": {
          "type": "boolean"
        },
        "AutoSchedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoSchedule"
          }
        },
        "CustomSchedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomSchedule"
          }
        }
      }
    },
    "Reconciliation": {
      "type": "object",
      "properties": {
        "UserFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "AccountingFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      }
    },
    "Vendor": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Zip": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "PaymentType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        }
      }
    },
    "PaymentSchedule": {
      "type": "object",
      "properties": {
        "ActiveFromDate": {
          "format": "date-time",
          "type": "string"
        },
        "ActiveToDate": {
          "format": "date-time",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "CreditLimit": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Merchant": {
      "type": "object",
      "properties": {
        "MerchantId": {
          "type": "string"
        },
        "AcquirerId": {
          "type": "string"
        }
      }
    },
    "TimeOfDay": {
      "type": "object",
      "properties": {
        "Day": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "From": {
          "type": "string"
        },
        "To": {
          "type": "string"
        }
      }
    },
    "RuleOverride": {
      "type": "object",
      "properties": {
        "Sequence": {
          "type": "string"
        },
        "OverrideCode": {
          "type": "string"
        },
        "OverrideValue": {
          "type": "string"
        }
      }
    },
    "AutoSchedule": {
      "type": "object",
      "properties": {
        "NumberOfPayments": {
          "format": "int32",
          "type": "integer"
        },
        "TokenAmount": {
          "format": "double",
          "type": "number"
        },
        "TokenStart": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomSchedule": {
      "type": "object",
      "properties": {
        "TokenAmount": {
          "format": "double",
          "type": "number"
        },
        "TokenStart": {
          "format": "date-time",
          "type": "string"
        },
        "TokenEnd": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Field": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string"
        },
        "Number": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SavedCard": {
      "type": "object",
      "properties": {
        "UniqueId": {
          "type": "string"
        },
        "KeySecret": {
          "type": "string"
        }
      }
    },
    "UpdateCardRequest": {
      "type": "object",
      "properties": {
        "KS": {
          "type": "string"
        },
        "UniqueId": {
          "type": "string"
        },
        "Amex_AccountNumber": {
          "type": "string"
        },
        "BookingId": {
          "format": "int32",
          "type": "integer"
        },
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "CardType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "MaximumSpendLimit": {
          "format": "double",
          "type": "number"
        },
        "MinimumSpendLimit": {
          "format": "double",
          "type": "number"
        },
        "AllowedCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ValidFrom": {
          "format": "date-time",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "type": "string"
        },
        "MaximumAuthorizationsAllowed": {
          "format": "int32",
          "type": "integer"
        },
        "HotelTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hotel"
          }
        },
        "FlightTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flight"
          }
        },
        "CarTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Car"
          }
        },
        "EventTransaction": {
          "$ref": "#/definitions/EventTransaction"
        },
        "RailTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rail"
          }
        },
        "OtherTransaction": {
          "$ref": "#/definitions/OtherTransaction"
        },
        "Tickets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ticket"
          }
        },
        "AirPlus_BookedForUserId": {
          "type": "string"
        },
        "AirPlus_BookedForUserName": {
          "type": "string"
        },
        "Mastercard_CompanyName": {
          "type": "string"
        },
        "Mastercard_TemplateName": {
          "type": "string"
        },
        "Mastercard_RCNAlias": {
          "type": "string"
        },
        "Mastercard_DataSourceName": {
          "type": "string"
        },
        "Mastercard_CompanyId": {
          "type": "string"
        },
        "Mastercard_TemplateId": {
          "type": "string"
        },
        "Mastercard_RCNId": {
          "type": "string"
        },
        "Mastercard_DataSourceId": {
          "type": "string"
        },
        "Mastercard_VelocityControls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VelocityControl"
          }
        },
        "Mastercard_AgingVelocityControl": {
          "$ref": "#/definitions/AgingVelocityControl"
        },
        "Mastercard_AmountRangeControl": {
          "$ref": "#/definitions/AmountRangeControl"
        },
        "Mastercard_CurfewControl": {
          "$ref": "#/definitions/CurfewControl"
        },
        "Mastercard_GeographyControl": {
          "$ref": "#/definitions/GeographyControl"
        },
        "Mastercard_MerchantIdControl": {
          "$ref": "#/definitions/MerchantIdControl"
        },
        "Mastercard_MerchantNameControl": {
          "$ref": "#/definitions/MerchantNameControl"
        },
        "Mastercard_MerchantAmountControl": {
          "type": "boolean"
        },
        "Mastercard_TimeOfDayControl": {
          "$ref": "#/definitions/TimeOfDayControl"
        },
        "Mastercard_TransactionLimitControl": {
          "$ref": "#/definitions/TransactionLimitControl"
        },
        "Mastercard_TravelControl": {
          "$ref": "#/definitions/TravelControl"
        },
        "Mastercard_ValidityPeriodControl": {
          "$ref": "#/definitions/ValidityPeriodControl"
        },
        "Mastercard_SupplierName": {
          "type": "string"
        },
        "Mastercard_SupplierEmail": {
          "type": "string"
        },
        "eNett_IsMultiUse": {
          "type": "boolean"
        },
        "eNett_MultiUseClosePercentage": {
          "format": "int32",
          "type": "integer"
        },
        "eNett_Allow3DS": {
          "type": "boolean"
        },
        "eNett_AcquirerId": {
          "type": "string"
        },
        "eNett_MerchantNumber": {
          "type": "string"
        },
        "eNett_MerchantCategoryCode": {
          "type": "string"
        },
        "eNett_MerchantCategoryName": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "type": "integer"
        },
        "eNett_Notes": {
          "type": "string"
        },
        "UserReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionalField"
          }
        },
        "Visa_UtcOffset": {
          "type": "string"
        },
        "Visa_Rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        },
        "OptionalFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionalField"
          }
        },
        "Amex_MaintainedBy": {
          "type": "string"
        },
        "Amex_SupplierToken": {
          "type": "boolean"
        },
        "Amex_MccTemplateId": {
          "type": "string"
        },
        "Amex_TokenTemplateId": {
          "type": "string"
        },
        "Amex_DomainControls": {
          "$ref": "#/definitions/DomainControls"
        },
        "Amex_RecurringData": {
          "$ref": "#/definitions/RecurringData"
        },
        "Amex_Reconciliation": {
          "$ref": "#/definitions/Reconciliation"
        },
        "Wex_Vendor": {
          "$ref": "#/definitions/Vendor"
        },
        "Wex_AuthHoldDays": {
          "format": "int32",
          "type": "integer"
        },
        "Wex_Country": {
          "type": "string"
        },
        "Wex_PaymentSchedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentSchedule"
          }
        },
        "Wex_MccGroupProfileName": {
          "type": "string"
        },
        "Dataflexnet_CurrencyType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "Dataflexnet_Reference": {
          "type": "string"
        },
        "Dataflexnet_VelocityLimit": {
          "format": "double",
          "type": "number"
        },
        "Dataflexnet_MaximumTransactions": {
          "format": "int32",
          "type": "integer"
        },
        "Dataflexnet_VelocityPeriodType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "Dataflexnet_VelocityPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "Dataflexnet_VirtualCardScheme": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        }
      }
    },
    "DeleteCardRequest": {
      "type": "object",
      "properties": {
        "ClientId": {
          "format": "int32",
          "type": "integer"
        },
        "CardType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "BookingId": {
          "format": "int32",
          "type": "integer"
        },
        "KS": {
          "type": "string"
        },
        "BookedForUserId": {
          "type": "string"
        },
        "BookedForUserName": {
          "type": "string"
        },
        "UniqueId": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        },
        "PurchaseRequestId": {
          "format": "int64",
          "type": "integer"
        },
        "CancelReason": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "description": "API Key Authentication",
      "name": "Authorization",
      "in": "header"
    }	
  }  
}